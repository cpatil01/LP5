import { Fragment, useRef, useState } from 'react';
import { Dialog, Transition } from '@headlessui/react';
import { Button } from './button';

const Popup = ({ open, additionalClass, onClose, title, body, icon, actions = [] }) => { // Provide default empty array
  const cancelButtonRef = useRef(null);

  const handleActionClick = (action) => {
    action.onClick(); // Call the provided onClick handler
    onClose(); // Close the popup after action is performed
  };

  return (
    <div>
      <Transition.Root show={open} as={Fragment}>
        <Dialog
          as="div"
          className="fixed z-10 inset-0 overflow-y-auto"
          initialFocus={cancelButtonRef}
          onClose={onClose}
        >
          <div className="flex items-center justify-center h-full">
            <Transition.Child
              as={Fragment}
              enter="ease-out duration-300"
              enterFrom="opacity-0"
              enterTo="opacity-100"
              leave="ease-in duration-200"
              leaveFrom="opacity-100"
              leaveTo="opacity-0"
            >
              <Dialog.Overlay className="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" />
            </Transition.Child>

            <Transition.Child
              as={Fragment}
              enter="ease-out duration-300"
              enterFrom="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
              enterTo="opacity-100 translate-y-0 sm:scale-100"
              leave="ease-in duration-200"
              leaveFrom="opacity-100 translate-y-0 sm:scale-100"
              leaveTo="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
            >
              <div className={`bg-white rounded-lg overflow-hidden mt-16 shadow-xl transform transition-all max-sm:w-[calc(100%-32px)] md:min-w-[417px] md:max-w-[700px] lg:min-w-[417px] lg:max-w-[700px] ${additionalClass}`}>
                <div className="bg-white px-4 pb-4 pt-5 sm:p-6">
                  <div className="flex justify-end">
                    <button
                      ref={cancelButtonRef}
                      type="button"
                      className="p-2"
                      onClick={onClose}
                    >
                      <img
                        className="h-6 w-auto"
                        src="/src/assets/close_gray.svg"
                        alt="close_gray.svg"
                      />
                    </button>
                  </div>
                  <div className="flex items-center justify-center">
                    <img className="max-sm:h-[48px] max-sm:w-[48px] md:h-[96px] md:w-[96px] lg:h-[96px] lg:w-[96px]" src={icon} alt="Icon" />
                  </div>
                  <div className="max-sm:mt-[16px] md:mt-[8px] lg:mt-[8px] text-center sm:text-left">
                    <Dialog.Title as="h3" className="text-base font-semibold leading-6 font-VodafoneRg text-ui_02 text-center">
                      {title}
                    </Dialog.Title>
                    <div className="max-sm:mt-[16px] md:mt-[24px] lg:mt-[24px]">
                      <p className="text-sm text-txt_body text-center font-VodafoneRg">{body}</p>
                    </div>
                  </div>
                </div>

                <div className="max-sm:mb-[16px] max-sm:gap-[12px] md:gap-[16px] md:mb-[60px] lg:gap-[16px] lg:mb-[60px] bg-white px-4 py-3 flex items-center justify-center max-sm:flex-col">
                {actions.map((action, index) => (
                  <Button
                    key={action.type}
                    variant={action.type}
                    className="font-bold text-lg  inline-flex justify-center max-sm:w-full px-4 py-2 md:w-[172px] lg:w-[172px]"
                    onClick={action.onClick}
                  >
                    {action.label}
                  </Button>
                ))}
                </div>
              </div>
            </Transition.Child>
          </div>
        </Dialog>
      </Transition.Root>
    </div>
  );
};

export default Popup;
